name: train-my-model

on: [push]

jobs:
  deploy-tf:
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: iterative/setup-cml@v1
      - name: deploy
        shell: bash
        env:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.aws_session_token }}
        run: |
          echo "Start deploying TF"
          test-cml-cloud-runner \
                --labels=tf \
                --type=t2.micro \
                --region us-west-1 \
                --idle-timeout=120
          echo "The deployment is done"

  train:
    needs: deploy-tf
    runs-on: [self-hosted,tf]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - uses: iterative/setup-cml@v1
      - uses: iterative/setup-dvc@v1
      - name: cml_run
        env:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.aws_session_token }}
        run: |
          echo "Training..."
          
          echo 'Hi from cml! END message' >> report.md
          cml-send-comment report.md
          echo "Trained!"

#  run:
#    runs-on: [ubuntu-latest]
#
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions/setup-python@v2
#        with:
#          python-version: '3.8'
#      - uses: iterative/setup-cml@v1
#      - uses: iterative/setup-dvc@v1
#
#      - name: cml
#        env:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          AWS_SESSION_TOKEN: ${{ secrets.aws_session_token }}
#        run: |
#          echo "HELLO GH ACTIONS"
#          python -V
#          pip -V
#          dvc version
#
#          pip3 install -r requirements.txt
#          dvc repro
#          dvc push
#          
#          git config --local user.email "$(git log --format='%ae' HEAD^!)"
#          git config --local user.name "$(git log --format='%an' HEAD^!)"
#          git add .
#          git commit -m 'ci train'
#          git push
#
